Resources:
  PortellaVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.42.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: PortellaVPC
  
  PortellaSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref PortellaVPC
      CidrBlock: 10.42.0.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PortellaSubnet1

  PortellaSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref PortellaVPC
      CidrBlock: 10.42.25.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PortellaSubnet2

  PortellaKeypair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Sub 'key-${AWS::StackName}'
      PublicKeyMaterial: !Ref PublicKeyMaterial


  PortellaGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PortellaVPC
      InternetGatewayId: !Ref PortellaGateway
  
  PortellaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PortellaVPC

  PortellaRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PortellaRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PortellaGateway

  PortellaSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PortellaSubnet1
      RouteTableId: !Ref PortellaRouteTable

  PortellaSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PortellaSubnet2
      RouteTableId: !Ref PortellaRouteTable
  
  AppSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Default security group for the CloudProject
      VpcId: !Ref PortellaVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8000'
          ToPort: '8000'
          SourceSecurityGroupId: !GetAtt LoadBalancerSecurityGroup.GroupId

      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  
  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for the load balancer
      VpcId: !Ref PortellaVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3000'
          ToPort: '3000'
          CidrIp: 0.0.0.0/0

  PortellaDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TableName: BolaoTable
      AttributeDefinitions:
        -
          AttributeName: Name
          AttributeType: S
      KeySchema:
        -
          AttributeName: Name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  DynamoDBAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: dynamodb:*
                Resource: !GetAtt PortellaDynamoDBTable.Arn

  DynamoDBAccessInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: "/"
      Roles:
        - !Ref DynamoDBAccessRole

  PortellaAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs ""
      LaunchConfigurationName: !Ref PortellaLaunchConfiguration
      MinSize: '1'
      MaxSize: '5'
      DesiredCapacity: '1'
      TargetGroupARNs: 
        - !Ref PortellaTargetGroup

  PortellaLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0d4efe6f666681b4f
      InstanceType: t2.micro
      IamInstanceProfile: !Ref DynamoDBAccessInstanceProfile
      KeyName: !Ref PortellaKeypair
      SecurityGroups: 
        - !Ref AppSecurityGroup

  PortellaLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets: 
        - !Ref PortellaSubnet1
        - !Ref PortellaSubnet2
      SecurityGroups: 
        - !Ref LoadBalancerSecurityGroup

  PortellaTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 8000
      Protocol: HTTP
      VpcId: !Ref PortellaVPC

  PortellaListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref PortellaTargetGroup
      LoadBalancerArn: !Ref PortellaLoadBalancer
      Port: 3000
      Protocol: HTTP

Parameters:
  PublicKeyMaterial:
    Description: The public key material
    Type: String